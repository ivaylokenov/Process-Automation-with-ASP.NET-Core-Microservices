apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: event-bus-data
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: "3Gi"

---

apiVersion: v1
kind: Service
metadata:
  name: event-bus
spec:
  clusterIP: None
  ports:
   - port: 5672
     targetPort: 5672
  selector:
    event-bus: rabbitmq

---

apiVersion: v1
kind: Service
metadata:
  name: event-bus-client
spec:
  type: LoadBalancer
  # type: NodePort
  ports:
   - port: 15672
     targetPort: 15672
    #  nodePort: 30007
  selector:
    event-bus: rabbitmq

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: event-bus
spec:
  serviceName: event-bus
  selector:
    matchLabels:
      event-bus: rabbitmq
  template:
    metadata:
      labels:
        event-bus: rabbitmq
        system: event-bus
    spec:
      containers:
      - name: event-bus
        image: rabbitmq:3-management
        imagePullPolicy: IfNotPresent
        ports:
        - name: amqp
          containerPort: 5672
        - name: management
          containerPort: 15672
        resources:
          limits:
            memory: "1Gi"
            cpu: "500m"
        env:
          - name: RABBITMQ_DEFAULT_USER
            valueFrom:
              configMapKeyRef:
                name: environment-settings
                key: event-bus-user
          - name: RABBITMQ_DEFAULT_PASS
            valueFrom:
              secretKeyRef:
                name: environment-secrets
                key: event-bus-password
        volumeMounts:
          - name: event-bus-data
            mountPath: /var/lib/rabbitmq/mnesia
      volumes:
      - name: event-bus-data
        persistentVolumeClaim:
          claimName: event-bus-data
